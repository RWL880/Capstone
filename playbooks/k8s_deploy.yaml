---
- hosts: all
  become: yes
  tasks:
    - name: Install dependencies
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common']
        state: present

    - name: Add Kubernetes APT key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes APT repository
      apt_repository:
        repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present

    - name: Install kubeadm, kubelet, and kubectl
      apt:
        name: ['kubelet', 'kubeadm', 'kubectl']
        state: present
        update_cache: yes

    - name: Turn off swap
      command: swapoff -a
      ignore_errors: true

    - name: Disable swap in fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#]*\sswap\s+sw\s+)'
        replace: '# \1'

- hosts: master
  become: yes
  tasks:
    - name: Initialize Kubernetes cluster
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      register: kubeadm_init

    - name: Create .kube directory
      file:
        path: /home/ubuntu/.kube
        state: directory
        mode: '0755'
        owner: ubuntu
        group: ubuntu

    - name: Copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Install Flannel network plugin
      shell: |
        kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Save join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Create namespace NS1
      command: kubectl create namespace NS1
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

- hosts: worker1,worker2
  become: yes
  tasks:
    - name: Join the cluster
      command: "{{ hostvars['master']['join_command']['stdout'] }} --ignore-preflight-errors=all"
      ignore_errors: yes
